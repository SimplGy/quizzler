// Generated by CoffeeScript 1.7.1
(function() {
  var app, body, goBtn, gotQuizData, hasClass, isLoggedIn, logOutBtn, onLogIn, onLogOut, parseFacebookPosts, questions, questionsEl, removeClass, showAllQuestions, showOneQuestion, skipBtn, thinkingClass;

  isLoggedIn = false;

  questions = [];

  thinkingClass = 'thinking';

  goBtn = document.getElementById('GoButton');

  skipBtn = document.getElementById('SkipBtn');

  logOutBtn = document.getElementById('LogOutBtn');

  body = document.getElementsByTagName('body')[0];

  questionsEl = document.getElementById('Questions');

  hasClass = function(node, className) {
    var idx;
    idx = Array.prototype.indexOf.call(node, className);
    if (idx < 0) {
      return void 0;
    } else {
      return idx;
    }
  };

  removeClass = function(node, className) {
    var idx;
    idx = Array.prototype.indexOf.call(node, className);
    if (idx < 0) {
      return;
    }
    return node.classList.splice(idx, 1);
  };

  app = {};

  app.showPage = function(pageName) {
    return body.className = pageName;
  };

  app.showPage('landing');

  window.fbAsyncInit = function() {
    console.log('facebook ready');
    FB.init({
      appId: window.location.hostname === 'localhost' ? '1538582919703882' : '1538565359705638',
      xfbml: true,
      version: 'v2.0'
    });
    return FB.getLoginStatus(function(response) {
      removeClass(goBtn, thinkingClass);
      if (response.status === 'connected') {
        return onLogIn();
      } else {
        return onLogOut();
      }
    });
  };

  goBtn.onclick = function(evt) {
    evt.preventDefault();
    if (hasClass(goBtn, thinkingClass)) {
      return;
    }
    if (isLoggedIn) {
      return app.showPage('quiz');
    } else {
      Array.prototype.push.call(goBtn.classList, thinkingClass);
      return FB.login(function(resp) {
        if (resp.authResponse) {
          console.log('Login successful');
          return onLogIn();
        } else {
          console.warn('User cancelled login or did not fully authorize.');
          return onLogOut();
        }
      });
    }
  };

  onLogIn = function() {
    console.log('isLoggedIn', isLoggedIn = true);
    goBtn.textContent = 'Start';
    FB.api('me', function(resp) {
      return console.log({
        me: resp
      });
    });
    return FB.api('jsquizzler/statuses', gotQuizData);
  };

  onLogOut = function() {
    console.log('isLoggedIn', isLoggedIn = false);
    app.showPage('landing');
    return goBtn.textContent = 'Log In';
  };

  gotQuizData = function(resp) {
    console.log(resp.data);
    return parseFacebookPosts(resp.data);
  };

  skipBtn.onclick = function(evt) {
    evt.preventDefault();
    return app.showPage('results');
  };

  logOutBtn.onclick = function(evt) {
    evt.prevendDefault();
    return FB.logout(onLogOut);
  };

  parseFacebookPosts = function(posts) {
    var parsed, q, quizItem, _i, _len, _ref;
    for (_i = 0, _len = posts.length; _i < _len; _i++) {
      quizItem = posts[_i];
      parsed = {};
      parsed.A = (_ref = quizItem.comments) != null ? _ref.data[0].message : void 0;
      q = quizItem.message.split('Q:\n');
      if (q.length === 2) {
        parsed.Q = markdown.toHTML(q[1]);
      }
      questions.push(parsed);
    }
    return questions;
  };

  showOneQuestion = function(idx) {
    idx = idx || 0;
    questionsEl.innerHTML = questions[idx].Q;
    return Prism.highlightAll();
  };

  showAllQuestions = function() {
    var markup, question, _i, _len;
    markup = '';
    for (_i = 0, _len = questions.length; _i < _len; _i++) {
      question = questions[_i];
      markup += question.Q;
    }
    questionsEl.innerHTML = markup;
    return Prism.highlightAll();
  };

}).call(this);
